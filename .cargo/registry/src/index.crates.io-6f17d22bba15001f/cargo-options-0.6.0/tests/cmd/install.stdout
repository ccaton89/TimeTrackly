Install a Rust binary. Default location is $HOME/.cargo/bin

Usage: cargo-mimic[EXE] install [OPTIONS] [crate]...

Arguments:
  [crate]...  

Options:
  -q, --quiet                   Do not print cargo log messages
  -j, --jobs <N>                Number of parallel jobs, defaults to # of CPUs
      --keep-going              Do not abort the build as soon as there is an error (unstable)
      --profile <PROFILE-NAME>  Build artifacts with the specified Cargo profile
  -F, --features <FEATURES>     Space or comma separated list of features to activate
      --all-features            Activate all available features
      --no-default-features     Do not activate the `default` feature
      --target <TRIPLE>         Build for the target triple [env: CARGO_BUILD_TARGET=]
      --target-dir <DIRECTORY>  Directory for all generated artifacts
      --message-format <FMT>    Error format
  -v, --verbose...              Use verbose output (-vv very verbose/build.rs output)
      --color <WHEN>            Coloring: auto, always, never
      --frozen                  Require Cargo.lock and cache are up to date
      --locked                  Require Cargo.lock is up to date
      --offline                 Run without accessing the network
      --config <KEY=VALUE>      Override a configuration value (unstable)
  -Z <FLAG>                     Unstable (nightly-only) flags to Cargo, see 'cargo -Z help' for
                                details
      --timings[=<FMTS>...]     Timing output formats (unstable) (comma separated): html, json
      --version <VERSION>       Specify a version to install
      --git <URL>               Git URL to install the specified crate from
      --branch <BRANCH>         Branch to use when installing from git
      --tag <TAG>               Tag to use when installing from git
      --rev <SHA>               Specific commit to use when installing from git
      --path <PATH>             Filesystem path to local crate to install
      --list                    list all installed packages and their versions
  -f, --force                   Force overwriting existing crates or binaries
      --no-track                Do not save tracking information
      --debug                   Build in debug mode (with the 'dev' profile) instead of release mode
      --root <DIR>              Directory to install packages into
      --index <INDEX>           Registry index to install from
      --registry <REGISTRY>     Registry to use
      --bin [<NAME>]            Install only the specified binary
      --bins                    Install all binaries
      --example [<NAME>]        Install only the specified example
      --examples                Install all examples
  -h, --help                    Print help

Run `cargo help install` for more detailed information.
